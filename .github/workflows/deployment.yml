name: Sandbox CICD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ms-sandbox-service

jobs:

  checkout:
    runs-on: [self-hosted, sandbox]
    outputs:
      commit_sha: ${{ steps.get_sha.outputs.commit_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: get_sha
        name: Get short commit SHA
        run: echo "commit_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  integration-tests:
    runs-on: [self-hosted, sandbox]
    needs: checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Integration Tests
        run: mvn clean verify -Pintegration-test

  build-and-push-repo:
    runs-on: [self-hosted, sandbox]
    needs: [checkout, integration-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Java application with Maven
        run: mvn clean package --file pom.xml

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          GIT_SHA: ${{ needs.checkout.outputs.commit_sha }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "Building image: $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHA"
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHA .
          docker tag $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHA $DOCKER_USERNAME/$IMAGE_NAME:latest

          echo "Pushing images: $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHA and latest"
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHA
          docker push $DOCKER_USERNAME/$IMAGE_NAME:latest

  deploy-to-ec2:
    name: Deploy to EC2 Docker Container
    runs-on: [ self-hosted, sandbox ]
    needs: [ build-and-push-repo ]

    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ec2-13-53-131-172.eu-north-1.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Pulling latest Docker image..."
            docker pull shajaldev0/ms-sandbox-service:latest

            echo "Stopping and removing any existing containers..."
            docker compose down || true

            echo "Starting container with existing docker-compose.yml..."
            docker compose up -d